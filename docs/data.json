{
    "project": {
        "name": "ahasweb",
        "description": "Small description for ahasweb goes here",
        "version": "0.0.0.4afccf3d"
    },
    "files": {
        "app\\components\\history-container.js": {
            "name": "app\\components\\history-container.js",
            "modules": {},
            "classes": {
                "HistoryContainerComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\lab-result-history.js": {
            "name": "app\\components\\lab-result-history.js",
            "modules": {},
            "classes": {
                "LabResultHistoryComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\medication-history.js": {
            "name": "app\\components\\medication-history.js",
            "modules": {},
            "classes": {
                "MedicationHistoryComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\patient-history.js": {
            "name": "app\\components\\patient-history.js",
            "modules": {},
            "classes": {
                "patientHistoryComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\patient-picture.js": {
            "name": "app\\components\\patient-picture.js",
            "modules": {},
            "classes": {
                "PatientPictureComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\radiography-history.js": {
            "name": "app\\components\\radiography-history.js",
            "modules": {},
            "classes": {
                "RadiographyHistoryComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\components\\vaccine-history.js": {
            "name": "app\\components\\vaccine-history.js",
            "modules": {},
            "classes": {
                "VaccineHistoryComponentController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\client-info.js": {
            "name": "app\\controllers\\client-info.js",
            "modules": {},
            "classes": {
                "ClientInfoController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\client-list.js": {
            "name": "app\\controllers\\client-list.js",
            "modules": {},
            "classes": {
                "ClientListController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\edit-client.js": {
            "name": "app\\controllers\\edit-client.js",
            "modules": {},
            "classes": {
                "EditClientController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\lab-result-upload.js": {
            "name": "app\\controllers\\lab-result-upload.js",
            "modules": {},
            "classes": {
                "labResultUploadController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\list-side-note.js": {
            "name": "app\\controllers\\list-side-note.js",
            "modules": {},
            "classes": {
                "List-Side-Note Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\new-calendar.js": {
            "name": "app\\controllers\\new-calendar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\new-client.js": {
            "name": "app\\controllers\\new-client.js",
            "modules": {},
            "classes": {
                "NewClientController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\new-patient.js": {
            "name": "app\\controllers\\new-patient.js",
            "modules": {},
            "classes": {
                "new-patient controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\new-side-note.js": {
            "name": "app\\controllers\\new-side-note.js",
            "modules": {},
            "classes": {
                "new side note Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\radiography-upload.js": {
            "name": "app\\controllers\\radiography-upload.js",
            "modules": {},
            "classes": {
                "radiographyUploadController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\search-patient.js": {
            "name": "app\\controllers\\search-patient.js",
            "modules": {},
            "classes": {
                "search-patient Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\upload-patient.js": {
            "name": "app\\controllers\\upload-patient.js",
            "modules": {},
            "classes": {
                "upload patient controleler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\view-appointment.js": {
            "name": "app\\controllers\\view-appointment.js",
            "modules": {},
            "classes": {
                "view appointment controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\view-calendar.js": {
            "name": "app\\controllers\\view-calendar.js",
            "modules": {},
            "classes": {
                "new-calendar Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\controllers\\view-patient.js": {
            "name": "app\\controllers\\view-patient.js",
            "modules": {},
            "classes": {
                "view-patient": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "HistoryContainerComponentController": {
            "name": "HistoryContainerComponentController",
            "shortname": "HistoryContainerComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\history-container.js",
            "line": 3,
            "description": "Controller for the history-container component"
        },
        "LabResultHistoryComponentController": {
            "name": "LabResultHistoryComponentController",
            "shortname": "LabResultHistoryComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\lab-result-history.js",
            "line": 3,
            "description": "controller for the lab-result-history component. Make AJAX get request on init"
        },
        "MedicationHistoryComponentController": {
            "name": "MedicationHistoryComponentController",
            "shortname": "MedicationHistoryComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\medication-history.js",
            "line": 3,
            "description": "controller for the medication-history component. Make AJAX get request on init"
        },
        "patientHistoryComponentController": {
            "name": "patientHistoryComponentController",
            "shortname": "patientHistoryComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\patient-history.js",
            "line": 3,
            "description": "controller for the patient-history component. Make AJAX get request on init. \nShows the entire medical history for the patient in chronological order."
        },
        "PatientPictureComponentController": {
            "name": "PatientPictureComponentController",
            "shortname": "PatientPictureComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\patient-picture.js",
            "line": 3,
            "description": "Controller for the patient-picture component"
        },
        "RadiographyHistoryComponentController": {
            "name": "RadiographyHistoryComponentController",
            "shortname": "RadiographyHistoryComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\radiography-history.js",
            "line": 3,
            "description": "controller for the radiography-history component. Make AJAX get request on init"
        },
        "VaccineHistoryComponentController": {
            "name": "VaccineHistoryComponentController",
            "shortname": "VaccineHistoryComponentController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\components\\vaccine-history.js",
            "line": 3,
            "description": "controller for the vaccine-history component. Make AJAX get request on init"
        },
        "ClientInfoController": {
            "name": "ClientInfoController",
            "shortname": "ClientInfoController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\client-info.js",
            "line": 3,
            "description": "Controller for client-info"
        },
        "ClientListController": {
            "name": "ClientListController",
            "shortname": "ClientListController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\client-list.js",
            "line": 3,
            "description": "Controller for client-list"
        },
        "EditClientController": {
            "name": "EditClientController",
            "shortname": "EditClientController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\edit-client.js",
            "line": 3,
            "description": "Controller for edit-client"
        },
        "labResultUploadController": {
            "name": "labResultUploadController",
            "shortname": "labResultUploadController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\lab-result-upload.js",
            "line": 3,
            "description": "Controller for lab-result-upload"
        },
        "List-Side-Note Controller": {
            "name": "List-Side-Note Controller",
            "shortname": "List-Side-Note Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\list-side-note.js",
            "line": 2,
            "description": "Controller for the list side note page\nThis shows all the side notes related to that specific patient, and medical record"
        },
        "new-calendar Controller": {
            "name": "new-calendar Controller",
            "shortname": "new-calendar Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\view-calendar.js",
            "line": 2,
            "description": "Controller for the new calendar page\nThis shows all of the appointments scheduled and if one clicks on a \nappointment, it will transition them to a view appointment page"
        },
        "NewClientController": {
            "name": "NewClientController",
            "shortname": "NewClientController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\new-client.js",
            "line": 3,
            "description": "Controller for new-client"
        },
        "new-patient controller": {
            "name": "new-patient controller",
            "shortname": "new-patient controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\new-patient.js",
            "line": 2,
            "description": "Controller for the newpatient page\nThis posts a request to the back end for adding a new-patient"
        },
        "new side note Controller": {
            "name": "new side note Controller",
            "shortname": "new side note Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\new-side-note.js",
            "line": 2,
            "description": "Controller for the  new side note page\nThis shows all the side notes options for user to post to backend"
        },
        "radiographyUploadController": {
            "name": "radiographyUploadController",
            "shortname": "radiographyUploadController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\radiography-upload.js",
            "line": 2,
            "description": "Controller for radiography-upload"
        },
        "search-patient Controller": {
            "name": "search-patient Controller",
            "shortname": "search-patient Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\search-patient.js",
            "line": 2,
            "description": "Controller for the search patient\nThis shows all the patients in the backend"
        },
        "upload patient controleler": {
            "name": "upload patient controleler",
            "shortname": "upload patient controleler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\upload-patient.js",
            "line": 2,
            "description": "Controller for the uploadpatient page\nCAN uploadpatients on htis page"
        },
        "view appointment controller": {
            "name": "view appointment controller",
            "shortname": "view appointment controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\view-appointment.js",
            "line": 2,
            "description": "Controller for the view appointment page\nDoes nothing inc ontroller"
        },
        "view-patient": {
            "name": "view-patient",
            "shortname": "view-patient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "app\\controllers\\view-patient.js",
            "line": 2,
            "description": "Controller for the view patients page\nThis shows all the thisngs required for patient\\\nonly thing needed was to have a button to take you to upload a picture"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "app\\components\\history-container.js",
            "line": 15,
            "description": "Shows the component which shows the list of all medical records for the patient in chronological order",
            "itemtype": "method",
            "name": "showChronological",
            "class": "HistoryContainerComponentController"
        },
        {
            "file": "app\\components\\history-container.js",
            "line": 27,
            "description": "Shows the component which shows the list of all medicine for the patient",
            "itemtype": "method",
            "name": "showMedication",
            "class": "HistoryContainerComponentController"
        },
        {
            "file": "app\\components\\history-container.js",
            "line": 39,
            "description": "Shows the component which shows the list of all lab results for the patient",
            "itemtype": "method",
            "name": "showLabResults",
            "class": "HistoryContainerComponentController"
        },
        {
            "file": "app\\components\\history-container.js",
            "line": 50,
            "description": "Shows the component which shows the list of all vaccines for the patient",
            "itemtype": "method",
            "name": "showVaccine",
            "class": "HistoryContainerComponentController"
        },
        {
            "file": "app\\components\\history-container.js",
            "line": 62,
            "description": "Shows the component which shows the list of all radiographs for the patient",
            "itemtype": "method",
            "name": "showRadiographs",
            "class": "HistoryContainerComponentController"
        },
        {
            "file": "app\\components\\lab-result-history.js",
            "line": 14,
            "description": "Redirects to the lab result upload page when user clicks on the Upload Lab Result button",
            "itemtype": "method",
            "name": "uploadResult",
            "class": "LabResultHistoryComponentController"
        },
        {
            "file": "app\\components\\lab-result-history.js",
            "line": 22,
            "description": "Redirects to the lab result page when the user clicks on it in the list",
            "params": [
                {
                    "name": "labResultID",
                    "description": "The ID of the lab result that has been clicked",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "viewEntry",
            "class": "LabResultHistoryComponentController"
        },
        {
            "file": "app\\components\\lab-result-history.js",
            "line": 60,
            "description": "deserializes the lab results after they have been received by the AJAX request. \nFilters picture_type for lab result. Also formats dates",
            "params": [
                {
                    "name": "labResults",
                    "description": "the JSON object received",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "deserialAttributes",
            "class": "LabResultHistoryComponentController"
        },
        {
            "file": "app\\components\\medication-history.js",
            "line": 14,
            "description": "Redirects to the new medical entry page when user clicks on the New Entry button",
            "itemtype": "method",
            "name": "newEntry",
            "class": "MedicationHistoryComponentController"
        },
        {
            "file": "app\\components\\medication-history.js",
            "line": 22,
            "description": "Redirects to the medical record page when the user clicks on it in the list",
            "params": [
                {
                    "name": "recordID",
                    "description": "The ID of the medical record that has been clicked",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "viewEntry",
            "class": "MedicationHistoryComponentController"
        },
        {
            "file": "app\\components\\medication-history.js",
            "line": 62,
            "description": "deserializes the mdeications after they have been received by the AJAX request. \nFilters med_type for medicine. Also formats dates",
            "params": [
                {
                    "name": "meds",
                    "description": "the JSON object received",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "deserialAttributes",
            "class": "MedicationHistoryComponentController"
        },
        {
            "file": "app\\components\\patient-history.js",
            "line": 26,
            "description": "Redirects to the medical record page when the user clicks on it in the list. Medical record\nmay be editable depending on the date",
            "params": [
                {
                    "name": "recordID",
                    "description": "The ID of the medical record that has been clicked",
                    "type": "Int"
                },
                {
                    "name": "date",
                    "description": "Date of the medical record. In Unix time.",
                    "type": "Date"
                }
            ],
            "itemtype": "method",
            "name": "viewEntry",
            "class": "patientHistoryComponentController"
        },
        {
            "file": "app\\components\\patient-history.js",
            "line": 72,
            "description": "deserializes the medical history after they have been received by the AJAX request. \nFilters med_type for medicine.",
            "params": [
                {
                    "name": "history",
                    "description": "the JSON object received",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "deserialAttributes",
            "class": "patientHistoryComponentController"
        },
        {
            "file": "app\\components\\patient-history.js",
            "line": 106,
            "description": "checks to see if the medical record can still be edited",
            "params": [
                {
                    "name": "olddate",
                    "description": "Date of the medical record. In Unix time.",
                    "type": "Date"
                }
            ],
            "itemtype": "method",
            "name": "checkUpdate",
            "class": "patientHistoryComponentController"
        },
        {
            "file": "app\\components\\patient-history.js",
            "line": 133,
            "description": "format he date to month/day/year",
            "params": [
                {
                    "name": "{Date}",
                    "description": "Date in unix time",
                    "type": "Date"
                }
            ],
            "itemtype": "method",
            "name": "format",
            "class": "patientHistoryComponentController"
        },
        {
            "file": "app\\components\\patient-picture.js",
            "line": 13,
            "description": "Controller for the patient-picture component when it first loads into the component\nIt gets the data and tries to display it in the HBS",
            "itemtype": "method",
            "name": "init",
            "class": "PatientPictureComponentController"
        },
        {
            "file": "app\\components\\radiography-history.js",
            "line": 14,
            "description": "Redirects to the radiography upload page when user clicks on the Upload Lab Result button",
            "itemtype": "method",
            "name": "uploadResult",
            "class": "RadiographyHistoryComponentController"
        },
        {
            "file": "app\\components\\radiography-history.js",
            "line": 21,
            "description": "Redirects to the radiography page when the user clicks on it in the list",
            "params": [
                {
                    "name": "radiographyID",
                    "description": "The ID of the radiography that has been clicked",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "viewEntry",
            "class": "RadiographyHistoryComponentController"
        },
        {
            "file": "app\\components\\radiography-history.js",
            "line": 59,
            "description": "deserializes the radiographs after they have been received by the AJAX request. \nFilters picture_type for radiograph. Also formats dates",
            "params": [
                {
                    "name": "radiograph",
                    "description": "the JSON object received",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "deserialAttributes",
            "class": "RadiographyHistoryComponentController"
        },
        {
            "file": "app\\components\\vaccine-history.js",
            "line": 14,
            "description": "Redirects to the new medical entry page when user clicks on the New Entry button",
            "itemtype": "method",
            "name": "newEntry",
            "class": "VaccineHistoryComponentController"
        },
        {
            "file": "app\\components\\vaccine-history.js",
            "line": 29,
            "description": "Redirects to the medical record page when the user clicks on it in the list. Medical record\nmay be editable depending on the date",
            "params": [
                {
                    "name": "recordID",
                    "description": "The ID of the medical record that has been clicked",
                    "type": "Int"
                },
                {
                    "name": "date",
                    "description": "Date of the medical record. In Unix time.",
                    "type": "Date"
                }
            ],
            "itemtype": "method",
            "name": "viewEntry",
            "class": "VaccineHistoryComponentController"
        },
        {
            "file": "app\\components\\vaccine-history.js",
            "line": 75,
            "description": "deserializes the vaccines after they have been received by the AJAX request. \nFilters med_type for vaccine.",
            "params": [
                {
                    "name": "meds",
                    "description": "the JSON object received",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "deserialAttributes",
            "class": "VaccineHistoryComponentController"
        },
        {
            "file": "app\\components\\vaccine-history.js",
            "line": 109,
            "description": "checks to see if the medical record can still be edited",
            "params": [
                {
                    "name": "olddate",
                    "description": "Date of the medical record. In Unix time.",
                    "type": "Date"
                }
            ],
            "itemtype": "method",
            "name": "checkUpdate",
            "class": "VaccineHistoryComponentController"
        },
        {
            "file": "app\\controllers\\client-info.js",
            "line": 9,
            "description": "handles action called when user clicks New Patient button. \nredirects to the client's new patient page",
            "itemtype": "method",
            "name": "newPatient",
            "params": [
                {
                    "name": "clientID",
                    "description": "The ID of the client",
                    "type": "Int"
                }
            ],
            "class": "ClientInfoController"
        },
        {
            "file": "app\\controllers\\client-info.js",
            "line": 22,
            "description": "handles the action called when user clicks on a patient's name. \nredirects to the patient's view-patient page",
            "itemtype": "method",
            "name": "viewPatient",
            "params": [
                {
                    "name": "petID",
                    "description": "The ID of the patient",
                    "type": "Int"
                }
            ],
            "class": "ClientInfoController"
        },
        {
            "file": "app\\controllers\\client-info.js",
            "line": 32,
            "description": "handles the action called when the user clicks the Edit Client button. \nredirects to the client's endit-client page",
            "itemtype": "method",
            "name": "editClient",
            "params": [
                {
                    "name": "clientID",
                    "description": "The ID of the client",
                    "type": "Int"
                }
            ],
            "class": "ClientInfoController"
        },
        {
            "file": "app\\controllers\\client-info.js",
            "line": 41,
            "description": "handles the action called when a user clicks the Make Appointment button. \nredirects to the client's callendar",
            "itemtype": "method",
            "name": "newAppointment",
            "params": [
                {
                    "name": "clientID",
                    "description": "The ID of the client",
                    "type": "Int"
                }
            ],
            "class": "ClientInfoController"
        },
        {
            "file": "app\\controllers\\client-list.js",
            "line": 9,
            "description": "fitlers clients according to user input",
            "itemtype": "method",
            "name": "filterClient",
            "class": "ClientListController"
        },
        {
            "file": "app\\controllers\\client-list.js",
            "line": 22,
            "description": "handles action called when user clicks on a client's name. Redirects to that client's\ninfo page.",
            "itemtype": "method",
            "name": "viewClient",
            "params": [
                {
                    "name": "clientID",
                    "description": "The ID of the client",
                    "type": "Int"
                }
            ],
            "class": "ClientListController"
        },
        {
            "file": "app\\controllers\\client-list.js",
            "line": 32,
            "description": "handles action called when user clicks New Client button. \nRedirects to the client page",
            "itemtype": "method",
            "name": "newPatient",
            "class": "ClientListController"
        },
        {
            "file": "app\\controllers\\client-list.js",
            "line": 44,
            "description": "Filters the client slist using the user's input. Sets the new model to the the filtered model",
            "params": [
                {
                    "name": "self",
                    "description": "the controller",
                    "type": "Object"
                },
                {
                    "name": "model",
                    "description": "the client list",
                    "type": "Object"
                },
                {
                    "name": "input",
                    "description": "user input",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "filter",
            "class": "ClientListController"
        },
        {
            "file": "app\\controllers\\edit-client.js",
            "line": 12,
            "description": "makes an ajax PUT request to save the client info",
            "params": [
                {
                    "name": "the",
                    "description": "model from the page",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "saveClient",
            "class": "EditClientController"
        },
        {
            "file": "app\\controllers\\lab-result-upload.js",
            "line": 15,
            "description": "makes an ajax POST request to save the lab result",
            "params": [
                {
                    "name": "the",
                    "description": "patient's id",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "sendLabResults",
            "class": "labResultUploadController"
        },
        {
            "file": "app\\controllers\\list-side-note.js",
            "line": 9,
            "description": "Redirects to a new fresh page of notes for creation",
            "itemtype": "method",
            "name": "getNote",
            "params": [
                {
                    "name": "model",
                    "description": "is the model passed in, note is the note number",
                    "type": "Object, int"
                }
            ],
            "class": "List-Side-Note Controller"
        },
        {
            "file": "app\\controllers\\list-side-note.js",
            "line": 18,
            "description": "Redirects to the the view of the side notes individual",
            "itemtype": "method",
            "name": "createSideNote",
            "params": [
                {
                    "name": "the",
                    "description": "model first passed in through the route",
                    "type": "Object"
                }
            ],
            "class": "List-Side-Note Controller"
        },
        {
            "file": "app\\controllers\\new-calendar.js",
            "line": 12,
            "description": "Does a post on the backend with the fields passed in",
            "itemtype": "method",
            "name": "submitNewCalendar",
            "class": "new-calendar Controller"
        },
        {
            "file": "app\\controllers\\new-calendar.js",
            "line": 57,
            "description": "Should show up with an alert if something went wrong",
            "itemtype": "method",
            "name": "showAlert",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "?,bool"
                }
            ],
            "class": "new-calendar Controller"
        },
        {
            "file": "app\\controllers\\new-calendar.js",
            "line": 70,
            "description": "Formate Date, changes the date from unix time to human readable one",
            "itemtype": "method",
            "name": "formatDate",
            "params": [
                {
                    "name": "date",
                    "description": "in unix, time in time",
                    "type": "Date, object"
                }
            ],
            "class": "new-calendar Controller"
        },
        {
            "file": "app\\controllers\\new-client.js",
            "line": 12,
            "description": "makes an ajax POST request to save the new client",
            "itemtype": "method",
            "name": "submitNewClient",
            "class": "NewClientController"
        },
        {
            "file": "app\\controllers\\new-client.js",
            "line": 72,
            "description": "clears the page's input fields",
            "params": [
                {
                    "name": "page",
                    "description": "the controller",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "clearFields",
            "class": "NewClientController"
        },
        {
            "file": "app\\controllers\\new-patient.js",
            "line": 13,
            "description": "Controller for the submitnewpatient\nTHis method does a post on the back end to create a new patient",
            "itemtype": "method",
            "name": "submitNewPatient()",
            "class": "new-patient controller"
        },
        {
            "file": "app\\controllers\\new-side-note.js",
            "line": 14,
            "description": "Controller for the submitnewnote\nTHis method does a post on the back end to create a new side note",
            "itemtype": "method",
            "name": "submitNewNote()",
            "class": "new side note Controller"
        },
        {
            "file": "app\\controllers\\radiography-upload.js",
            "line": 19,
            "description": "makes an ajax POST request to save the radiography",
            "params": [
                {
                    "name": "the",
                    "description": "patient's id",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "sendRadiographyResults",
            "class": "radiographyUploadController"
        },
        {
            "file": "app\\controllers\\search-patient.js",
            "line": 11,
            "description": "Redirects to a patient",
            "itemtype": "method",
            "name": "getPatient",
            "params": [
                {
                    "name": "patient",
                    "description": "id from model passed in",
                    "type": "Int"
                }
            ],
            "class": "search-patient Controller"
        },
        {
            "file": "app\\controllers\\search-patient.js",
            "line": 20,
            "description": "Filters patient search bar",
            "itemtype": "method",
            "name": "filterPatient",
            "class": "search-patient Controller"
        },
        {
            "file": "app\\controllers\\search-patient.js",
            "line": 36,
            "description": "Filters patient search bar",
            "itemtype": "method",
            "name": "filterPatient",
            "class": "search-patient Controller"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " app\\controllers\\list-side-note.js:9"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " app\\controllers\\list-side-note.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " app\\controllers\\new-calendar.js:57"
        },
        {
            "message": "param name missing: {?,bool}",
            "line": " app\\controllers\\new-calendar.js:57"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " app\\controllers\\new-calendar.js:70"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " app\\controllers\\search-patient.js:11"
        }
    ]
}